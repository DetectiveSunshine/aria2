name: Build Aria2 with MinGW (O3 and LTO)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_mingw:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update package list
        run: sudo apt-get update -y

      - name: Install essential tools and MinGW prerequisites
        run: |
          sudo apt-get install -y --no-install-recommends \
            ca-certificates curl gpg dirmngr \
            software-properties-common wget

      # Removed steps to add Collabora repository and key.
      # Relying on the standard distribution's mingw-w64 package.

      - name: Install MinGW and build dependencies
        run: |
          sudo apt-get install -y --no-install-recommends \
            mingw-w64 \
            autoconf automake autopoint \
            build-essential libtool pkg-config \
            zlib1g-dev libgnutls28-dev libgmp-dev \
            libssh2-1-dev libc-ares-dev libxml2-dev \
            libsqlite3-dev libssl-dev libcppunit-dev \
            gettext

      - name: Define Aria2 version
        run: echo "ARIA2_VERSION=1.37.0" >> $GITHUB_ENV

      - name: Download Aria2 source
        run: |
          curl -L -o aria2-${{ env.ARIA2_VERSION }}.tar.xz https://github.com/aria2/aria2/releases/download/release-${{ env.ARIA2_VERSION }}/aria2-${{ env.ARIA2_VERSION }}.tar.xz
          tar xf aria2-${{ env.ARIA2_VERSION }}.tar.xz

      - name: Configure Aria2 for MinGW with O3 and LTO
        working-directory: aria2-${{ env.ARIA2_VERSION }}
        run: |
          export MINGW_PACKAGE_PREFIX=x86_64-w64-mingw32
          export ARIA2_STATIC=yes
          ./configure \
            --host=${MINGW_PACKAGE_PREFIX} \
            --prefix=/${MINGW_PACKAGE_PREFIX} \
            --with-libgnutls \
            --with-libgmp \
            --with-libssh2 \
            --with-libcares \
            --with-libxml2 \
            --with-sqlite3 \
            --with-libssl \
            --enable-static=${ARIA2_STATIC} \
            --enable-shared=$(if [ "$ARIA2_STATIC" = "yes" ]; then echo no; else echo yes; fi) \
            CPPFLAGS="-I/${MINGW_PACKAGE_PREFIX}/include -I/usr/include -O3 -flto -DNDEBUG" \
            LDFLAGS="-L/${MINGW_PACKAGE_PREFIX}/lib -L/usr/lib/${MINGW_PACKAGE_PREFIX} -L/usr/lib -static-libgcc -static-libstdc++ -flto" \
            PKG_CONFIG_PATH="/${MINGW_PACKAGE_PREFIX}/lib/pkgconfig:/usr/lib/${MINGW_PACKAGE_PREFIX}/pkgconfig:/usr/lib/pkgconfig"

      - name: Build Aria2
        working-directory: aria2-${{ env.ARIA2_VERSION }}
        run: make -j$(nproc)

      - name: Create package directory
        run: mkdir -p ./aria2_mingw_package

      - name: Install Aria2 to package directory
        working-directory: aria2-${{ env.ARIA2_VERSION }}
        run: make install DESTDIR=$(pwd)/../aria2_mingw_package

      - name: List packaged files
        run: ls -R ./aria2_mingw_package

      - name: Upload Aria2 MinGW build artifact
        uses: actions/upload-artifact@v4
        with:
          name: aria2-mingw-${{ env.ARIA2_VERSION }}-O3-lto
          path: ./aria2_mingw_package/
