name: Build aria2 Windows x64

on:
  push:
  pull_request:

jobs:
  build-windows-x64:
    runs-on: ubuntu-latest
    env:
      HOST: x86_64-w64-mingw32
      PREFIX: /usr/local/${{ env.HOST }}
      CFLAGS: "-O3 -flto"
      CXXFLAGS: "-O3 -flto"
      LDFLAGS: "-flto"
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            mingw-w64 \
            autoconf automake autotools-dev autopoint libtool pkg-config \
            libxml2-dev libcppunit-dev zlib1g-dev libssh2-1-dev libsqlite3-dev \
            libgcrypt-dev libgpg-error-dev libssl-dev libexpat1-dev libgnutls28-dev \
            nettle-dev libgmp-dev

      - name: Prepare build dependencies for mingw-w64 (cross-compile libs)
        run: |
          set -e
          cd $HOME
          mkdir -p aria2-windows-deps
          cd aria2-windows-deps

          # List of libs to build for mingw-w64 cross compile
          # We build only those needed: c-ares, expat, sqlite3, zlib, libssh2, cppunit
          # If these libs are already installed for mingw-w64 in $PREFIX, skip build (check a marker file)
          if [ ! -f built_marker ]; then
            # Download and build c-ares
            wget https://c-ares.haxx.se/download/c-ares-1.34.5.tar.gz
            tar xzf c-ares-1.34.5.tar.gz
            cd c-ares-1.34.5
            ./configure --host=${HOST} --prefix=${PREFIX} --disable-shared --enable-static
            make -j$(nproc)
            make install
            cd ..

            # Download and build expat
            wget https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.bz2
            tar xjf expat-2.5.0.tar.bz2
            cd expat-2.5.0
            ./configure --host=${HOST} --prefix=${PREFIX} --disable-shared --enable-static
            make -j$(nproc)
            make install
            cd ..

            # Download and build sqlite3
            wget https://sqlite.org/2023/sqlite-autoconf-3410200.tar.gz
            tar xzf sqlite-autoconf-3410200.tar.gz
            cd sqlite-autoconf-3410200
            ./configure --host=${HOST} --prefix=${PREFIX} --disable-shared --enable-static
            make -j$(nproc)
            make install
            cd ..

            # Download and build zlib
            wget https://zlib.net/zlib-1.2.13.tar.gz
            tar xzf zlib-1.2.13.tar.gz
            cd zlib-1.2.13
            CHOST=${HOST} ./configure --prefix=${PREFIX}
            make -j$(nproc)
            make install
            cd ..

            # Download and build libssh2
            wget https://www.libssh2.org/download/libssh2-1.11.0.tar.gz
            tar xzf libssh2-1.11.0.tar.gz
            cd libssh2-1.11.0
            ./configure --host=${HOST} --prefix=${PREFIX} --disable-shared --enable-static
            make -j$(nproc)
            make install
            cd ..

            # Download and build cppunit
            wget https://dev-www.libreoffice.org/src/cppunit-1.15.1.tar.gz
            tar xzf cppunit-1.15.1.tar.gz
            cd cppunit-1.15.1
            ./configure --host=${HOST} --prefix=${PREFIX} --disable-shared --enable-static
            make -j$(nproc)
            make install
            cd ..

            touch built_marker
          fi

      - name: Bootstrap aria2 build system
        run: autoreconf -i

      - name: Configure aria2 for Windows cross-compile with optimization and LTO
        run: |
          ./mingw-config

          ./configure \
            --host=${HOST} \
            --prefix=${PREFIX} \
            CFLAGS="${CFLAGS}" \
            CXXFLAGS="${CXXFLAGS}" \
            LDFLAGS="${LDFLAGS}" \
            ARIA2_STATIC=yes

      - name: Build aria2
        run: make -j$(nproc)

      - name: Run unit tests
        run: make check || true

      - name: Upload aria2 Windows x64 executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: aria2-windows-x64
          path: src/aria2c.exe
